local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

local function setupWallhop(character)
	local humanoid = character:WaitForChild("Humanoid")
	local hrp = character:WaitForChild("HumanoidRootPart")

	local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
	gui.Name = "WallhopGUI"
	gui.ResetOnSpawn = false

	local button = Instance.new("TextButton")
	button.Size = UDim2.new(0, 130, 0, 50)
	button.Position = UDim2.new(0, 10, 1, -60)
	button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	button.TextColor3 = Color3.new(1,1,1)
	button.Font = Enum.Font.GothamBold
	button.TextScaled = true
	button.Text = "Wallhop: OFF"
	button.Draggable = true
	button.Active = true
	button.Parent = gui

	local enabled = false
	local isHopping = false

	button.MouseButton1Click:Connect(function()
		enabled = not enabled
		button.Text = enabled and "Wallhop: ON" or "Wallhop: OFF"
	end)

	local function isTouchingWallEdge()
		local origin = hrp.Position - Vector3.new(0, 2.3, 0)
		local range = 0.5

		local raycastParams = RaycastParams.new()
		raycastParams.FilterDescendantsInstances = {character}
		raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

		local directions = {
			Vector3.new(1, 0, 0), Vector3.new(-1, 0, 0),
			Vector3.new(0, 0, 1), Vector3.new(0, 0, -1)
		}

		for _, dir in ipairs(directions) do
			local r1 = workspace:Raycast(origin, dir * range, raycastParams)
			local r2 = workspace:Raycast(origin, dir * -range, raycastParams)
			if r1 and r2 and r1.Instance ~= r2.Instance then
				local dist = (r1.Position - r2.Position).Magnitude
				if dist <= 0.6 then
					return true
				end
			end
		end
		return false
	end

	local function rotateCameraInstant()
		local cf = camera.CFrame
		camera.CFrame = cf * CFrame.Angles(0, math.rad(90), 0)
		task.wait(0.01)
		camera.CFrame = cf
	end

	RunService.Heartbeat:Connect(function()
		if not enabled or isHopping or humanoid.FloorMaterial ~= Enum.Material.Air then return end

		if isTouchingWallEdge() then
			isHopping = true
			rotateCameraInstant()
			humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			task.wait(0.2)
			isHopping = false
		end
	end)
end

-- Setup awal dan saat respawn
local function init()
	local char = player.Character or player.CharacterAdded:Wait()
	setupWallhop(char)
	player.CharacterAdded:Connect(function(c)
		wait(1)
		setupWallhop(c)
	end)
end

init()
