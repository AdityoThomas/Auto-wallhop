local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local function setupWallhop(character)
	local humanoid = character:WaitForChild("Humanoid")
	local hrp = character:WaitForChild("HumanoidRootPart")
	local camera = workspace.CurrentCamera

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "WallhopGUI"
	screenGui.Parent = player:WaitForChild("PlayerGui")
	screenGui.ResetOnSpawn = false

	local toggleBtn = Instance.new("TextButton")
	toggleBtn.Size = UDim2.new(0, 120, 0, 50)
	toggleBtn.Position = UDim2.new(0, 20, 1, -80)
	toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	toggleBtn.Font = Enum.Font.GothamBold
	toggleBtn.TextScaled = true
	toggleBtn.Text = "Wallhop: OFF"
	toggleBtn.Parent = screenGui
	toggleBtn.Active = true
	toggleBtn.Draggable = true

	local wallhopEnabled = false
	local isWallhopping = false

	toggleBtn.MouseButton1Click:Connect(function()
		wallhopEnabled = not wallhopEnabled
		toggleBtn.Text = wallhopEnabled and "Wallhop: ON" or "Wallhop: OFF"
	end)

	RunService.Heartbeat:Connect(function()
		if not wallhopEnabled or isWallhopping then return end
		if humanoid.FloorMaterial ~= Enum.Material.Air then return end

		local rayOrigin = hrp.Position
		local rayDirection = hrp.CFrame.LookVector * 3

		local raycastParams = RaycastParams.new()
		raycastParams.FilterDescendantsInstances = {character}
		raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

		local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)

		if result and result.Instance and result.Instance:IsA("BasePart") then
			local part = result.Instance
			local surface = result.Position

			-- Deteksi dua warna pada satu part
			local x = math.floor((surface - part.Position).X + part.Size.X/2)
			local y = math.floor((surface - part.Position).Y + part.Size.Y/2)
			local z = math.floor((surface - part.Position).Z + part.Size.Z/2)

			local color1 = part.Color
			local secondColor = part:FindFirstChildWhichIsA("Decal") or part:FindFirstChildWhichIsA("Texture")

			if secondColor and (color1 ~= secondColor.Color3) then
				isWallhopping = true
				humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
				task.wait(0.05)
				isWallhopping = false
			end
		end
	end)
end

if player.Character then
	setupWallhop(player.Character)
end

player.CharacterAdded:Connect(setupWallhop)
